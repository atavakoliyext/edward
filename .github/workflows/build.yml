name: 'Release'
on:
  push
jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: run
        uses: cedrickring/golang-action/go1.13@1.5.1
        with:
          args: go test ./...
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: ["linux", "darwin"]
        goarch: ["386", "amd64"]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Get Version
        id: version
        run: echo "::set-output name=version::`cat VERSION`"
      - name: Build
        uses: cedrickring/golang-action/go1.13@1.5.1
        with:
          args: go build -o edward .
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
      - run: zip edward_v${{ steps.version.outputs.version }}_${{ matrix.goos }}_${{ matrix.goarch}}.zip edward
      - name: Add build asset
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: edward_v${{ steps.version.outputs.version }}_${{ matrix.goos }}_${{ matrix.goarch}}.zip
  release:
    name: 'Release'
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - run: echo ${{ steps.create_release.outputs.upload_url }} > upload_url.txt
      - name: Save upload URL
        uses: actions/upload-artifact@v1
        with:
          name: upload_url
          path: upload_url.txt
  upload:
    name: 'Upload'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: ["linux", "darwin"]
        goarch: ["386", "amd64"]
    steps:
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: build
      - name: Get upload URL
        uses: actions/download-artifact@v1
        with:
          name: upload_url
      - name: Save upload_url
        id: upload
        run: echo "::set-output name=url::`cat upload_url/upload_url.txt`"
      - name: Get Version
        id: version
        run: echo "::set-output name=version::`cat VERSION`"
      - name: Archive build
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: edward_v${{ steps.version.outputs.version }}_${{ matrix.goos }}_${{ matrix.goarch}}.zip
      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload.outputs.url }}
          asset_path: build/edward_v${{ steps.version.outputs.version }}_${{ matrix.goos }}_${{ matrix.goarch}}.zip
          asset_name: edward_v${{ steps.version.outputs.version }}_${{ matrix.goos }}_${{ matrix.goarch}}.zip
          asset_content_type: application/zip